/* tslint:disable */
/* eslint-disable */
/**
 * Feature Flags API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1EvaluatePostRequest
 */
export interface V1EvaluatePostRequest {
    /**
     * 
     * @type {string}
     * @memberof V1EvaluatePostRequest
     */
    flagKey?: string;
    /**
     * 
     * @type {string}
     * @memberof V1EvaluatePostRequest
     */
    envKey?: string;
    /**
     * Arbitrary targeting attributes
     * @type {{ [key: string]: any; }}
     * @memberof V1EvaluatePostRequest
     */
    context?: { [key: string]: any; };
}

/**
 * Check if a given object implements the V1EvaluatePostRequest interface.
 */
export function instanceOfV1EvaluatePostRequest(value: object): value is V1EvaluatePostRequest {
    return true;
}

export function V1EvaluatePostRequestFromJSON(json: any): V1EvaluatePostRequest {
    return V1EvaluatePostRequestFromJSONTyped(json, false);
}

export function V1EvaluatePostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1EvaluatePostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'flagKey': json['flagKey'] == null ? undefined : json['flagKey'],
        'envKey': json['envKey'] == null ? undefined : json['envKey'],
        'context': json['context'] == null ? undefined : json['context'],
    };
}

export function V1EvaluatePostRequestToJSON(json: any): V1EvaluatePostRequest {
    return V1EvaluatePostRequestToJSONTyped(json, false);
}

export function V1EvaluatePostRequestToJSONTyped(value?: V1EvaluatePostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'flagKey': value['flagKey'],
        'envKey': value['envKey'],
        'context': value['context'],
    };
}

