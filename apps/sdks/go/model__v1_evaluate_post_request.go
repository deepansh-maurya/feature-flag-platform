/*
Feature Flags API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1EvaluatePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1EvaluatePostRequest{}

// V1EvaluatePostRequest struct for V1EvaluatePostRequest
type V1EvaluatePostRequest struct {
	FlagKey *string `json:"flagKey,omitempty"`
	EnvKey *string `json:"envKey,omitempty"`
	// Arbitrary targeting attributes
	Context map[string]interface{} `json:"context,omitempty"`
}

// NewV1EvaluatePostRequest instantiates a new V1EvaluatePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1EvaluatePostRequest() *V1EvaluatePostRequest {
	this := V1EvaluatePostRequest{}
	return &this
}

// NewV1EvaluatePostRequestWithDefaults instantiates a new V1EvaluatePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1EvaluatePostRequestWithDefaults() *V1EvaluatePostRequest {
	this := V1EvaluatePostRequest{}
	return &this
}

// GetFlagKey returns the FlagKey field value if set, zero value otherwise.
func (o *V1EvaluatePostRequest) GetFlagKey() string {
	if o == nil || IsNil(o.FlagKey) {
		var ret string
		return ret
	}
	return *o.FlagKey
}

// GetFlagKeyOk returns a tuple with the FlagKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EvaluatePostRequest) GetFlagKeyOk() (*string, bool) {
	if o == nil || IsNil(o.FlagKey) {
		return nil, false
	}
	return o.FlagKey, true
}

// HasFlagKey returns a boolean if a field has been set.
func (o *V1EvaluatePostRequest) HasFlagKey() bool {
	if o != nil && !IsNil(o.FlagKey) {
		return true
	}

	return false
}

// SetFlagKey gets a reference to the given string and assigns it to the FlagKey field.
func (o *V1EvaluatePostRequest) SetFlagKey(v string) {
	o.FlagKey = &v
}

// GetEnvKey returns the EnvKey field value if set, zero value otherwise.
func (o *V1EvaluatePostRequest) GetEnvKey() string {
	if o == nil || IsNil(o.EnvKey) {
		var ret string
		return ret
	}
	return *o.EnvKey
}

// GetEnvKeyOk returns a tuple with the EnvKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EvaluatePostRequest) GetEnvKeyOk() (*string, bool) {
	if o == nil || IsNil(o.EnvKey) {
		return nil, false
	}
	return o.EnvKey, true
}

// HasEnvKey returns a boolean if a field has been set.
func (o *V1EvaluatePostRequest) HasEnvKey() bool {
	if o != nil && !IsNil(o.EnvKey) {
		return true
	}

	return false
}

// SetEnvKey gets a reference to the given string and assigns it to the EnvKey field.
func (o *V1EvaluatePostRequest) SetEnvKey(v string) {
	o.EnvKey = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *V1EvaluatePostRequest) GetContext() map[string]interface{} {
	if o == nil || IsNil(o.Context) {
		var ret map[string]interface{}
		return ret
	}
	return o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EvaluatePostRequest) GetContextOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Context) {
		return map[string]interface{}{}, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *V1EvaluatePostRequest) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given map[string]interface{} and assigns it to the Context field.
func (o *V1EvaluatePostRequest) SetContext(v map[string]interface{}) {
	o.Context = v
}

func (o V1EvaluatePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1EvaluatePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FlagKey) {
		toSerialize["flagKey"] = o.FlagKey
	}
	if !IsNil(o.EnvKey) {
		toSerialize["envKey"] = o.EnvKey
	}
	if !IsNil(o.Context) {
		toSerialize["context"] = o.Context
	}
	return toSerialize, nil
}

type NullableV1EvaluatePostRequest struct {
	value *V1EvaluatePostRequest
	isSet bool
}

func (v NullableV1EvaluatePostRequest) Get() *V1EvaluatePostRequest {
	return v.value
}

func (v *NullableV1EvaluatePostRequest) Set(val *V1EvaluatePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1EvaluatePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1EvaluatePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1EvaluatePostRequest(val *V1EvaluatePostRequest) *NullableV1EvaluatePostRequest {
	return &NullableV1EvaluatePostRequest{value: val, isSet: true}
}

func (v NullableV1EvaluatePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1EvaluatePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


